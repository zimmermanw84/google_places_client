{
  "author": {
    "name": "kazuhide maruyama"
  },
  "name": "grunt-typescript",
  "description": "compile typescript to javascript",
  "version": "0.8.0",
  "homepage": "https://github.com/k-maru/grunt-typescript",
  "repository": {
    "type": "git",
    "url": "git@github.com:k-maru/grunt-typescript.git"
  },
  "bugs": {
    "url": "https://github.com/k-maru/grunt-typescript/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/k-maru/grunt-typescript/blob/master/LICENSE"
    }
  ],
  "main": "Gruntfile.js",
  "scripts": {
    "start": "grunt build",
    "test": "grunt test"
  },
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "typescript": "1.6.2",
    "bluebird": "~2.9.34",
    "chokidar": "^1.0.5"
  },
  "peerDependencies": {
    "grunt": "~0.4.5"
  },
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-contrib-nodeunit": "~0.4.1",
    "grunt-contrib-clean": "~0.6.0"
  },
  "optionalDependencies": {},
  "keywords": [
    "gruntplugin",
    "typescript"
  ],
  "readme": "grunt-typescript\r\n================\r\n[![Build Status](https://travis-ci.org/k-maru/grunt-typescript.png?branch=master)](https://travis-ci.org/k-maru/grunt-typescript) [![NPM version](https://badge.fury.io/js/grunt-typescript.png)](http://badge.fury.io/js/grunt-typescript)\r\n\r\n[![NPM](https://nodei.co/npm/grunt-typescript.png?downloads=true)](https://nodei.co/npm/grunt-typescript/)\r\n\r\nCompile TypeScript in Grunt\r\n\r\n[Release Note](CHANGELOG.md)\r\n\r\nImportant!\r\n----------\r\n``\r\nBasePath option has been deprecated. Method for determining an output directory has been changed in the same way as the TSC. Please re-set output directory with the new rootDir option or use keepDirectoryHierachy option.However, keepDirectoryHierachy option would not be available long.\r\n``\r\n\r\n## Documentation\r\nYou'll need to install `grunt-typescript` first:\r\n\r\n```\r\nnpm install grunt-typescript --save-dev\r\n```\r\n\r\nor add the following line to devDependencies in your package.json\r\n\r\n```\r\n\"grunt-typescript\": \"\",\r\n```\r\n\r\nThen modify your `Gruntfile.js` file by adding the following line:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-typescript');\r\n```\r\n\r\nThen add some configuration for the plugin like so:\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ...\r\n  typescript: {\r\n    base: {\r\n      src: ['path/to/typescript/files/**/*.ts'],\r\n      dest: 'where/you/want/your/js/files',\r\n      options: {\r\n        module: 'amd', //or commonjs\r\n        target: 'es5', //or es3\r\n        basePath: 'path/to/typescript/files',\r\n        sourceMap: true,\r\n        declaration: true\r\n      }\r\n    }\r\n  },\r\n  ...\r\n});\r\n```\r\n\r\nIf you want to create a js file that is a concatenation of all the ts file (like -out option from tsc),\r\nyou should specify the name of the file with the '.js' extension to dest option.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ...\r\n  typescript: {\r\n    base: {\r\n      src: ['path/to/typescript/files/**/*.ts'],\r\n      dest: 'where/you/want/your/js/file.js',\r\n      options: {\r\n        module: 'amd', //or commonjs\r\n      }\r\n    }\r\n  },\r\n  ...\r\n});\r\n```\r\n\r\n## Options\r\n\r\n### typescript options\r\n\r\n| name                           | type    | description                                                                                                                           |\r\n|--------------------------------|---------|---------------------------------------------------------------------------------------------------------------------------------------|\r\n| noLib                          | boolean | Do not include a default lib.d.ts with global declarations                                                                            |\r\n| target                         | string  | Specify ECMAScript target version: 'ES3' (default), 'ES5', or 'ES6'                                                                   |\r\n| module                         | string  | Specify module code generation: \"commonjs\" (default), \"amd\", \"system\" or \"umd\"                                                        |\r\n| sourceMap                      | boolean | Generates corresponding .map files                                                                                                    |\r\n| declaration                    | boolean | Generates corresponding .d.ts file                                                                                                    |\r\n| removeComments                 | boolean | Do not emit comments to output.                                                                                                       |\r\n| noImplicitAny                  | boolean | Warn on expressions and declarations with an implied 'any' type.                                                                      |\r\n| noResolve                      | boolean | Skip resolution and preprocessing.                                                                                                    |\r\n| preserveConstEnums             | boolean | Do not erase const enum declarations in generated code.                                                                               |\r\n| noEmitOnError                  | boolean | Do not emit outputs if any type checking errors were reported.The default for this option is set to true for backwards compatibility. |\r\n| suppressImplicitAnyIndexErrors | boolean | Suppress noImplicitAny errors for indexing objects lacking index signatures.                                                          |\r\n| experimentalDecorators         | boolean |                                                                                                                                       |\r\n| emitDecoratorMetadata          | boolean |                                                                                                                                       |\r\n| newLine                        | string  |                                                                                                                                       |\r\n| inlineSourceMap                | boolean |                                                                                                                                       |\r\n| inlineSources                  | boolean |                                                                                                                                       |\r\n| noEmitHelpers                  | boolean |                                                                                                                                       |\r\n\r\n### original options\r\n\r\n####generateTsConfig\r\n**type**: `string` | `boolean`\r\n\r\ngenerateTsConfig option will generate the content and equivalent tsconfig.json that are specified in the option.\r\nThe value specify the directory name to be output. It is output to the current directory when you specify true.\r\n\r\n#### references\r\n**type**: `string` | `string[]`\r\n\r\nSet auto reference libraries.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ...\r\n  typescript: {\r\n    base: {\r\n      src: ['path/to/typescript/files/**/*.ts'],\r\n      options: {\r\n        references: [\r\n          \"core\",       //lib.core.d.ts\r\n          \"dom\",        //lib.dom.d.ts\r\n          \"scriptHost\", //lib.scriptHost.d.ts\r\n          \"webworker\",  //lib.webworker.d.ts\r\n          \"path/to/reference/files/**/*.d.ts\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  ...\r\n});\r\n```\r\n\r\n#### watch\r\n**type**: `string` | `boolean` | { path?:<`string` | `string[]``>; before?: <`string` | `string[]``>; after?: <`string` | `string[]``>; atBegin: `boolean` }\r\n\r\nWatch .ts files.\r\nIt runs very quickly the second time since the compilation. It is because you only want to read and output file is limited.\r\n\r\nSpecify the directory where you want to monitor in the options.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ...\r\n  typescript: {\r\n    base: {\r\n      src: ['path/to/typescript/files/**/*.ts'],\r\n      options: {\r\n        watch: 'path/to/typescript/files' //or ['path/to/typescript/files1', 'path/to/typescript/files2']\r\n      }\r\n    }\r\n  },\r\n  ...\r\n});\r\n```\r\n\r\nIf you specify the true, then automatically detects the directory.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ...\r\n  typescript: {\r\n    base: {\r\n      src: ['path/to/typescript/files/**/*.ts'],\r\n      options: {\r\n        watch: true //Detect all target files root. eg: 'path/to/typescript/files/'\r\n      }\r\n    }\r\n  },\r\n  ...\r\n});\r\n```\r\n\r\nFor expansion of the future, You can also be specified 'object'.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ...\r\n  typescript: {\r\n    base: {\r\n      src: ['path/to/typescript/files/**/*.ts'],\r\n      options: {\r\n        watch: {\r\n          path: 'path/to/typescript/files', //or ['path/to/typescript/files1', 'path/to/typescript/files2']\r\n          before: ['beforetasks'],   //Set before tasks. eg: clean task\r\n          after: ['aftertasks']      //Set after tasks.  eg: minify task\r\n          atBegin: true              //Run tasks when watcher starts. default false\r\n        }\r\n      }\r\n    }\r\n  },\r\n  ...\r\n});\r\n```\r\n\r\n#### basePath(obsolete)\r\n**type**: `string`\r\n\r\nPath component to cut off when mapping the source files to dest files.\r\n\r\n#### keepDirectoryHierarchy(obsolete)\r\n**type**: `boolean`\r\n\r\nPath component to cut off when mapping the source files to dest files.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  ...\r\n  typescript: {\r\n    base: {\r\n      src: ['path/to/typescript/files/**/*.ts'],\r\n      dest: 'bin'\r\n      options: {\r\n        keepDirectoryHierarchy: true\r\n      }\r\n    }\r\n  },\r\n  ...\r\n});\r\n```\r\n\r\nIf keepDirectoryHierarchy option is true, it is output as follows.\r\n\r\n```\r\n/bin\r\n- /path\r\n--- /to\r\n----- /typescript\r\n------- /files\r\n--------- *.ts \r\n```\r\n\r\nIf keepDirectoryHierarchy option is false or not set, it is output as follows.\r\nIt is same way as the tsc.\r\n\r\n```\r\n/bin\r\n- *.ts \r\n```\r\n\r\n\r\n※I'm sorry for poor English\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-typescript@0.8.0",
  "dist": {
    "shasum": "ee42876e74b58d1965652fcd704ef20b8f5a923e"
  },
  "_from": "grunt-typescript@",
  "_resolved": "https://registry.npmjs.org/grunt-typescript/-/grunt-typescript-0.8.0.tgz"
}
